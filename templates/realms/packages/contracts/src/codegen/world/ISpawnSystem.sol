// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { TokenType } from "../Common.sol";

/**
 * @title ISpawnSystem
 * @author MUD (https://mud.dev) by Lattice (https://lattice.xyz)
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface ISpawnSystem {
  function spawnPlayer() external;

  function buyInfantry(uint256 amount) external;

  function buyInfantryByToken(TokenType token_type, uint256 amount) external;

  function buyCavalryA(uint256 amount) external;

  function buyCavalryB(uint256 amount) external;

  function buyCavalryC(uint256 amount) external;

  function spawnCapital(uint16 capital_id) external payable;

  function garrison(uint16 land_id, uint256 infantry, uint256 cavalryA, uint256 cavalryB, uint256 cavalryC) external;

  function march(
    uint16 destination,
    uint256 infantry,
    uint256 cavalryA,
    uint256 cavalryB,
    uint256 cavalryC,
    uint8 army_id
  ) external;

  function getArmyPower(bytes32 entityKey) external view returns (uint256);

  function getLandPower(uint16 land_id) external view returns (uint256);

  function _calculateLosses(bytes32 armyKey, uint16 defenceLocation) external view returns (uint256[8] memory);

  function attack(uint8 army_id) external;

  function farming(uint16 capital_id) external;

  function getStageOneEndTime() external pure returns (uint256 timestamp);

  function stakeTokenB(uint256 amount) external;

  function stakeTokenC(uint256 amount) external;

  function unStakeTokenB(address staker, uint256 amount) external;

  function setUnStakeFee(uint256 fee) external;

  function setPassiveUnStakeFee(uint256 fee) external;

  function setOwner() external;
}
